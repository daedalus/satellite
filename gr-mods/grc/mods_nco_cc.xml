<?xml version="1.0"?>
<block>
  <name>nco_cc</name>
  <key>mods_nco_cc</key>
  <category>Synchronizers</category>
  <import>import mods</import>
  <make>mods.nco_cc($phase_inc, $n_steps)</make>
  <callback>set_phase_inc($phase_inc)</callback>
  <param>
    <name>Phase Increment</name>
    <key>phase_inc</key>
    <type>float</type>
  </param>
  <param>
    <name>Smoothing Steps</name>
    <key>n_steps</key>
    <type>int</type>
  </param>
  <sink>
    <name>in</name>
    <type>complex</type>
  </sink>
  <source>
    <name>out</name>
    <type>complex</type>
  </source>
  <doc>Mixing by Numerically Controlled Oscillator

This block receives a complex (IQ) input and multiplies this signal by the \
complex sinusoid generated by a numerically controlled oscillator (NCO). It \
can be used for example for frequency offset correction or digital down/up \
conversion.

Parameters:
phase_inc -> Fixed phase increment accumulated after each sampling period. \
This should be set as "2*pi*F", where F is the target normalized (digital) \
frequency for the NCO.

n_steps -> Number of steps used to adjust the phase increment when it is \
changed asynchronously. This is used to avoid abrupt frequency changes in \
the output. Instead of changing directly from the previous frequency to the \
current, do so in "n_steps". The only exception is when the NCO's \
frequency is set to 0. When this occurs, the NCO transitions to 0 \
immediately.
  </doc>
</block>
